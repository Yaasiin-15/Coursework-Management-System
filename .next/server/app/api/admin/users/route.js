"use strict";(()=>{var e={};e.id=2628,e.ids=[2628],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},58229:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>f});var n={};t.r(n),t.d(n,{GET:()=>c});var o=t(49303),s=t(88716),i=t(60670),a=t(87070),u=t(14184),l=t(93330),d=t(43258);async function c(e){try{let r=(0,d.Y)(e);if(!r||"admin"!==r.role)return a.NextResponse.json({message:"Unauthorized"},{status:401});await (0,u.Z)();let t=await l.Z.find({},"-passwordHash").sort({createdAt:-1});return a.NextResponse.json({users:t})}catch(e){return console.error("Error fetching users:",e),a.NextResponse.json({message:"Internal server error"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/admin/users/route",pathname:"/api/admin/users",filename:"route",bundlePath:"app/api/admin/users/route"},resolvedPagePath:"C:\\Users\\Hp\\Desktop\\Full-Stack Projects\\Course\\src\\app\\api\\admin\\users\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:g}=p,h="/api/admin/users/route";function y(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:f})}},95456:(e,r,t)=>{t.d(r,{Oe:()=>c,RA:()=>u,WX:()=>l,c_:()=>d});var n=t(41482),o=t.n(n),s=t(42023),i=t.n(s);let a=process.env.JWT_SECRET||"your-secret-key";function u(e){return o().sign(e,a,{expiresIn:"7d"})}function l(e){try{return o().verify(e,a)}catch(e){return null}}async function d(e){return i().hash(e,12)}async function c(e,r){return i().compare(e,r)}},14184:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(11185),o=t.n(n);let s=process.env.MONGODB_URI||"mongodb://localhost:27017/coursework-management";if(!s)throw Error("Please define the MONGODB_URI environment variable");let i=global.mongoose;i||(i=global.mongoose={conn:null,promise:null});let a=async function(){if(i.conn)return i.conn;i.promise||(i.promise=o().connect(s,{bufferCommands:!1}).then(e=>e));try{i.conn=await i.promise}catch(e){throw i.promise=null,e}return i.conn}},43258:(e,r,t)=>{t.d(r,{Y:()=>o});var n=t(95456);function o(e){try{let r=function(e){let r=e.headers.get("authorization");return r&&r.startsWith("Bearer ")?r.substring(7):null}(e);if(!r)return console.log("No token provided in request"),null;let t=(0,n.WX)(r);if(!t)return console.log("Invalid or expired token"),null;return t}catch(e){return console.error("Error in authentication:",e),null}}},93330:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(11185),o=t.n(n);let s=new(o()).Schema({name:{type:String,required:[!0,"Name is required"],trim:!0},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0},role:{type:String,enum:["student","teacher","admin"],required:[!0,"Role is required"]},passwordHash:{type:String,required:[!0,"Password is required"]},notificationSettings:{emailNotifications:{type:Boolean,default:!0},assignmentReminders:{type:Boolean,default:!0},gradeNotifications:{type:Boolean,default:!0},systemUpdates:{type:Boolean,default:!1}},preferences:{language:{type:String,default:"en"},theme:{type:String,default:"system"}},classId:{type:o().Schema.Types.ObjectId,ref:"Class",required:function(){return"student"===this.role}}},{timestamps:!0}),i=o().models.User||o().model("User",s)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[9276,5972,6944],()=>t(58229));module.exports=n})();