"use strict";(()=>{var e={};e.id=8873,e.ids=[8873],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},83391:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g});var n={};t.r(n),t.d(n,{POST:()=>d});var o=t(49303),s=t(88716),a=t(60670),i=t(87070),u=t(14184),l=t(93330),p=t(95456);async function d(e){try{await (0,u.Z)();let{email:r,password:t}=await e.json();if(!r||!t)return i.NextResponse.json({message:"Email and password are required"},{status:400});let n=await l.Z.findOne({email:r});if(!n||!await (0,p.Oe)(t,n.passwordHash))return i.NextResponse.json({message:"Invalid credentials"},{status:401});let o=(0,p.RA)({userId:n._id.toString(),email:n.email,role:n.role});return i.NextResponse.json({token:o,user:{id:n._id,name:n.name,email:n.email,role:n.role}})}catch(e){return console.error("Login error:",e),i.NextResponse.json({message:"Internal server error"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/auth/login/route",pathname:"/api/auth/login",filename:"route",bundlePath:"app/api/auth/login/route"},resolvedPagePath:"C:\\Users\\Hp\\Desktop\\Full-Stack Projects\\Course\\src\\app\\api\\auth\\login\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:f}=c,h="/api/auth/login/route";function y(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}},95456:(e,r,t)=>{t.d(r,{Oe:()=>d,RA:()=>u,WX:()=>l,c_:()=>p});var n=t(41482),o=t.n(n),s=t(42023),a=t.n(s);let i=process.env.JWT_SECRET||"your-secret-key";function u(e){return o().sign(e,i,{expiresIn:"7d"})}function l(e){try{return o().verify(e,i)}catch(e){return null}}async function p(e){return a().hash(e,12)}async function d(e,r){return a().compare(e,r)}},14184:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(11185),o=t.n(n);let s=process.env.MONGODB_URI||"mongodb://localhost:27017/coursework-management";if(!s)throw Error("Please define the MONGODB_URI environment variable");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let i=async function(){if(a.conn)return a.conn;a.promise||(a.promise=o().connect(s,{bufferCommands:!1}).then(e=>e));try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}},93330:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(11185),o=t.n(n);let s=new(o()).Schema({name:{type:String,required:[!0,"Name is required"],trim:!0},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0},role:{type:String,enum:["student","teacher","admin"],required:[!0,"Role is required"]},passwordHash:{type:String,required:[!0,"Password is required"]},notificationSettings:{emailNotifications:{type:Boolean,default:!0},assignmentReminders:{type:Boolean,default:!0},gradeNotifications:{type:Boolean,default:!0},systemUpdates:{type:Boolean,default:!1}},preferences:{language:{type:String,default:"en"},theme:{type:String,default:"system"}},classId:{type:o().Schema.Types.ObjectId,ref:"Class",required:function(){return"student"===this.role}}},{timestamps:!0}),a=o().models.User||o().model("User",s)}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[9276,5972,6944],()=>t(83391));module.exports=n})();