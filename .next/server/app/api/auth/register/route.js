"use strict";(()=>{var e={};e.id=3002,e.ids=[3002],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},58191:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>x,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>c});var n=r(49303),a=r(88716),i=r(60670),o=r(87070),u=r(14184),d=r(93330),l=r(73939),p=r(95456);async function c(e){try{await (0,u.Z)();let{name:t,email:r,password:s,role:n,classId:a}=await e.json();if(!t||!r||!s||!n)return o.NextResponse.json({message:"All fields are required"},{status:400});if("student"===n&&!a)return o.NextResponse.json({message:"Class selection is required for students"},{status:400});if(!["student","teacher","admin"].includes(n))return o.NextResponse.json({message:"Invalid role"},{status:400});if(await d.Z.findOne({email:r}))return o.NextResponse.json({message:"User already exists with this email"},{status:409});let i=await (0,p.c_)(s),c={name:t,email:r,role:n,passwordHash:i};"student"===n&&a&&(c.classId=a);let m=new d.Z(c);return await m.save(),"student"===n&&a&&await l.Z.findByIdAndUpdate(a,{$addToSet:{students:m._id}},{new:!0}),o.NextResponse.json({message:"User created successfully"},{status:201})}catch(e){if(console.error("Registration error:",e),e instanceof Error){if(e.message.includes("E11000"))return o.NextResponse.json({message:"User already exists with this email"},{status:409});if("ValidationError"===e.name)return o.NextResponse.json({message:"Validation error: "+e.message},{status:400})}return o.NextResponse.json({message:"Internal server error"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"C:\\Users\\Hp\\Desktop\\Full-Stack Projects\\Course\\src\\app\\api\\auth\\register\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:g,serverHooks:h}=m,y="/api/auth/register/route";function x(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},95456:(e,t,r)=>{r.d(t,{Oe:()=>p,RA:()=>u,WX:()=>d,c_:()=>l});var s=r(41482),n=r.n(s),a=r(42023),i=r.n(a);let o=process.env.JWT_SECRET||"your-secret-key";function u(e){return n().sign(e,o,{expiresIn:"7d"})}function d(e){try{return n().verify(e,o)}catch(e){return null}}async function l(e){return i().hash(e,12)}async function p(e,t){return i().compare(e,t)}},14184:(e,t,r)=>{r.d(t,{Z:()=>o});var s=r(11185),n=r.n(s);let a=process.env.MONGODB_URI||"mongodb://localhost:27017/coursework-management";if(!a)throw Error("Please define the MONGODB_URI environment variable");let i=global.mongoose;i||(i=global.mongoose={conn:null,promise:null});let o=async function(){if(i.conn)return i.conn;i.promise||(i.promise=n().connect(a,{bufferCommands:!1}).then(e=>e));try{i.conn=await i.promise}catch(e){throw i.promise=null,e}return i.conn}},73939:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(11185),n=r.n(s);let a=new(n()).Schema({name:{type:String,required:!0,trim:!0},description:{type:String,trim:!0},code:{type:String,required:!0,uppercase:!0,trim:!0},teacher:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},students:[{type:n().Schema.Types.ObjectId,ref:"User"}]},{timestamps:!0});a.index({code:1},{unique:!0});let i=n().models.Class||n().model("Class",a)},93330:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(11185),n=r.n(s);let a=new(n()).Schema({name:{type:String,required:[!0,"Name is required"],trim:!0},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0},role:{type:String,enum:["student","teacher","admin"],required:[!0,"Role is required"]},passwordHash:{type:String,required:[!0,"Password is required"]},notificationSettings:{emailNotifications:{type:Boolean,default:!0},assignmentReminders:{type:Boolean,default:!0},gradeNotifications:{type:Boolean,default:!0},systemUpdates:{type:Boolean,default:!1}},preferences:{language:{type:String,default:"en"},theme:{type:String,default:"system"}},classId:{type:n().Schema.Types.ObjectId,ref:"Class",required:function(){return"student"===this.role}}},{timestamps:!0}),i=n().models.User||n().model("User",a)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972,6944],()=>r(58191));module.exports=s})();