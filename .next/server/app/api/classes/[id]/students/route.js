"use strict";(()=>{var e={};e.id=7060,e.ids=[7060],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},4472:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>x,patchFetch:()=>S,requestAsyncStorage:()=>g,routeModule:()=>f,serverHooks:()=>y,staticGenerationAsyncStorage:()=>h});var r={};s.r(r),s.d(r,{DELETE:()=>m,POST:()=>p});var n=s(49303),a=s(88716),o=s(60670),i=s(87070),u=s(14184),d=s(73939),l=s(93330),c=s(43258);async function p(e,{params:t}){try{let s=(0,c.Y)(e);if(!s||"teacher"!==s.role&&"admin"!==s.role)return i.NextResponse.json({message:"Unauthorized"},{status:401});await (0,u.Z)();let{studentId:r}=await e.json(),n=t.id;if(!r)return i.NextResponse.json({message:"Student ID is required"},{status:400});let a=await d.Z.findById(n);if(!a)return i.NextResponse.json({message:"Class not found"},{status:404});if("teacher"===s.role&&a.teacher.toString()!==s.userId)return i.NextResponse.json({message:"Unauthorized"},{status:401});let o=await l.Z.findById(r);if(!o||"student"!==o.role)return i.NextResponse.json({message:"Student not found"},{status:404});if(o.classId)return i.NextResponse.json({message:"Student is already assigned to a class"},{status:400});return a.students.push(r),await a.save(),o.classId=n,await o.save(),i.NextResponse.json({message:"Student added to class successfully"},{status:200})}catch(e){return console.error("Error adding student to class:",e),i.NextResponse.json({message:"Internal server error"},{status:500})}}async function m(e,{params:t}){try{let s=(0,c.Y)(e);if(!s||"teacher"!==s.role&&"admin"!==s.role)return i.NextResponse.json({message:"Unauthorized"},{status:401});await (0,u.Z)();let{studentId:r}=await e.json(),n=t.id;if(!r)return i.NextResponse.json({message:"Student ID is required"},{status:400});let a=await d.Z.findById(n);if(!a)return i.NextResponse.json({message:"Class not found"},{status:404});if("teacher"===s.role&&a.teacher.toString()!==s.userId)return i.NextResponse.json({message:"Unauthorized"},{status:401});return a.students=a.students.filter(e=>e.toString()!==r),await a.save(),await l.Z.findByIdAndUpdate(r,{$unset:{classId:1}}),i.NextResponse.json({message:"Student removed from class successfully"},{status:200})}catch(e){return console.error("Error removing student from class:",e),i.NextResponse.json({message:"Internal server error"},{status:500})}}let f=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/classes/[id]/students/route",pathname:"/api/classes/[id]/students",filename:"route",bundlePath:"app/api/classes/[id]/students/route"},resolvedPagePath:"C:\\Users\\Hp\\Desktop\\Full-Stack Projects\\Course\\src\\app\\api\\classes\\[id]\\students\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:g,staticGenerationAsyncStorage:h,serverHooks:y}=f,x="/api/classes/[id]/students/route";function S(){return(0,o.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:h})}},95456:(e,t,s)=>{s.d(t,{Oe:()=>c,RA:()=>u,WX:()=>d,c_:()=>l});var r=s(41482),n=s.n(r),a=s(42023),o=s.n(a);let i=process.env.JWT_SECRET||"your-secret-key";function u(e){return n().sign(e,i,{expiresIn:"7d"})}function d(e){try{return n().verify(e,i)}catch(e){return null}}async function l(e){return o().hash(e,12)}async function c(e,t){return o().compare(e,t)}},14184:(e,t,s)=>{s.d(t,{Z:()=>i});var r=s(11185),n=s.n(r);let a=process.env.MONGODB_URI||"mongodb://localhost:27017/coursework-management";if(!a)throw Error("Please define the MONGODB_URI environment variable");let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let i=async function(){if(o.conn)return o.conn;o.promise||(o.promise=n().connect(a,{bufferCommands:!1}).then(e=>e));try{o.conn=await o.promise}catch(e){throw o.promise=null,e}return o.conn}},43258:(e,t,s)=>{s.d(t,{Y:()=>n});var r=s(95456);function n(e){try{let t=function(e){let t=e.headers.get("authorization");return t&&t.startsWith("Bearer ")?t.substring(7):null}(e);if(!t)return console.log("No token provided in request"),null;let s=(0,r.WX)(t);if(!s)return console.log("Invalid or expired token"),null;return s}catch(e){return console.error("Error in authentication:",e),null}}},73939:(e,t,s)=>{s.d(t,{Z:()=>o});var r=s(11185),n=s.n(r);let a=new(n()).Schema({name:{type:String,required:!0,trim:!0},description:{type:String,trim:!0},code:{type:String,required:!0,unique:!0,uppercase:!0,trim:!0},teacher:{type:n().Schema.Types.ObjectId,ref:"User",required:!0},students:[{type:n().Schema.Types.ObjectId,ref:"User"}]},{timestamps:!0});a.index({code:1},{unique:!0});let o=n().models.Class||n().model("Class",a)},93330:(e,t,s)=>{s.d(t,{Z:()=>o});var r=s(11185),n=s.n(r);let a=new(n()).Schema({name:{type:String,required:[!0,"Name is required"],trim:!0},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0},role:{type:String,enum:["student","teacher","admin"],required:[!0,"Role is required"]},passwordHash:{type:String,required:[!0,"Password is required"]},notificationSettings:{emailNotifications:{type:Boolean,default:!0},assignmentReminders:{type:Boolean,default:!0},gradeNotifications:{type:Boolean,default:!0},systemUpdates:{type:Boolean,default:!1}},preferences:{language:{type:String,default:"en"},theme:{type:String,default:"system"}},classId:{type:n().Schema.Types.ObjectId,ref:"Class",required:function(){return"student"===this.role}}},{timestamps:!0}),o=n().models.User||n().model("User",a)}};var t=require("../../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9276,5972,6944],()=>s(4472));module.exports=r})();